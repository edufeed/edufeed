// Generated by LiveScript 1.3.1
(function(){
  var fs, json2csv, couchdb_url, getLogAnalysisResultsAsString, nano, main;
  fs = require('fs');
  json2csv = require('json2csv');
  couchdb_url = require('../couchdb_utils').couchdb_url;
  getLogAnalysisResultsAsString = require('../www/log-analysis').getLogAnalysisResultsAsString;
  nano = require('nano')(couchdb_url);
  main = function(){
    var filename;
    filename = process.argv[2];
    if (!fs.existsSync('www')) {
      console.log('you need to run this script from the edufeed directory');
      return;
    }
    if (filename == null) {
      console.log('you need to provide a filename as an argument');
      return;
    }
    return fs.readFile(filename + ".JSON", function(err, JSONfile){
      var results, rows, fields, unnested_results, i$, ref$, len$, key, j$, ref1$, len1$, nestedKey;
      if (err) {
        console.log(err);
        return;
      }
      results = JSON.parse(JSONfile);
      rows = [];
      fields = [];
      unnested_results = {};
      unnested_results['name'] = filename;
      fields.push('name');
      for (i$ = 0, len$ = (ref$ = Object.keys(results)).length; i$ < len$; ++i$) {
        key = ref$[i$];
        if (typeof results[key] === 'number') {
          unnested_results[key] = results[key];
          fields.push(key);
        } else {
          unnested_results[key] = {};
          for (j$ = 0, len1$ = (ref1$ = Object.keys(results[key])).length; j$ < len1$; ++j$) {
            nestedKey = ref1$[j$];
            unnested_results[key + '.' + nestedKey] = results[key][nestedKey];
            fields.push(key + '.' + nestedKey);
          }
        }
      }
      return json2csv({
        data: unnested_results,
        fields: fields
      }, function(err, csv){
        if (csv === 'undefined') {
          console.log('error');
        }
        return fs.writeFile(filename + ".csv", csv, function(err){
          if (err) {
            return console.log(err);
          } else {
            return console.log('file saved');
          }
        });
      });
    });
  };
  main();
}).call(this);
