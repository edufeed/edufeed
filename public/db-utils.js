// Generated by LiveScript 1.3.1
(function(){
  var db_cache, remote_db_cache, db_sync_handlers, getDb, setSyncHandler, getItems, clearDb, out$ = typeof exports != 'undefined' && exports || this;
  db_cache = {};
  remote_db_cache = {};
  db_sync_handlers = {};
  out$.getDb = getDb = function(dbname){
    var db, changes, params, username, ref$, password, remote_db;
    if (db_cache[dbname] != null) {
      return db_cache[dbname];
    }
    db = db_cache[dbname] = new PouchDB(dbname);
    changes = db.changes({
      live: true
    });
    changes.on('change', function(change){
      if (db_sync_handlers[dbname] != null) {
        return db_sync_handlers[dbname](change);
      }
    });
    params = getUrlParameters();
    if (params.sync != null) {
      username = (ref$ = params.username) != null ? ref$ : 'guestuser';
      password = (ref$ = params.password) != null ? ref$ : 'guestpassword';
      remote_db = remote_db_cache[dbname] = new PouchDB('http://edufeed.iriscouch.com/' + dbname, {
        auth: {
          username: username,
          password: password
        }
      });
      db.sync(remote_db, {
        live: true
      }).on('error', function(err){
        console.log('sync error');
        return console.log(err);
      });
    }
    return db;
  };
  out$.setSyncHandler = setSyncHandler = function(dbname, callback){
    return db_sync_handlers[dbname] = callback;
  };
  out$.getItems = getItems = function(dbname, callback){
    var db;
    db = getDb(dbname);
    return db.allDocs({
      include_docs: true
    }).then(function(data){
      var x;
      return callback((function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = data.rows).length; i$ < len$; ++i$) {
          x = ref$[i$];
          results$.push(x.doc);
        }
        return results$;
      }()));
    });
  };
  out$.clearDb = clearDb = function(dbname){
    var db;
    db = getDb(dbname);
    return db.allDocs({
      include_docs: true
    }).then(function(data){
      var i$, ref$, len$, x, results$ = [];
      for (i$ = 0, len$ = (ref$ = data.rows).length; i$ < len$; ++i$) {
        x = ref$[i$];
        x.doc._deleted = true;
        results$.push(db.put(x.doc));
      }
      return results$;
    });
  };
}).call(this);
