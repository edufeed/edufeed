// Generated by LiveScript 1.3.1
(function(){
  Polymer({
    is: 'admin-activity',
    S: function(pattern){
      return $(this.$$(pattern));
    },
    clearItems: function(){
      var self;
      self = this;
      return clearDb('feeditems', function(){
        return self.fire('task-finished', self);
      });
    },
    addSampleItems: function(){
      var self, wordlist, items, word;
      self = this;
      wordlist = ['cat', 'dog', 'white', 'black', 'blue', 'red', 'bee', 'bird', 'lion', 'tiger', 'fish', 'city', 'house', 'roof', 'tree', 'river', 'apple', 'banana', 'cherry', 'orange', 'pear'];
      items = [
        {
          itemtype: 'admin'
        }, {
          itemtype: 'example',
          data: {
            foo: 'somefooval',
            bar: 'somebarval'
          },
          meta: {
            poster: 'geza'
          }
        }
      ].concat((function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = wordlist).length; i$ < len$; ++i$) {
          word = ref$[i$];
          results$.push({
            itemtype: 'typeword',
            data: {
              word: word
            },
            meta: {
              poster: 'someuser'
            }
          });
        }
        return results$;
      }()));
      return async.each(items, function(item, callback){
        return postItem('feeditems', item, callback);
      }, function(results){
        return self.fire('task-finished', self);
      });
    },
    addCustomItem: function(){
      var self, itemtype, data_text, data, meta_text, meta;
      self = this;
      itemtype = this.S('#itemtypeinput').val();
      if (itemtype == null || itemtype.length === 0) {
        alert('must specify itemtype');
        return;
      }
      data_text = this.S('#datainput').val();
      data = jsyaml.safeLoad(data_text);
      meta_text = this.S('#metainput').val();
      meta = jsyaml.safeLoad(meta_text);
      return postItem('feeditems', {
        itemtype: itemtype,
        data: data,
        meta: meta
      }, function(){
        return self.fire('task-finished', self);
      });
    }
  });
}).call(this);
