// Generated by LiveScript 1.3.1
(function(){
  Polymer({
    is: 'side-scroll-feed',
    properties: {
      items: {
        type: Array,
        value: [],
        observer: 'itemsChanged'
      }
    },
    S: function(pattern){
      return $(this.$$(pattern));
    },
    closeFocusedItem: function(){
      this.S('#focusitem').html('');
      this.S('#thumbnails').show();
      return this.S('#exitbutton').hide();
    },
    openItem: function(item){
      var self, itemtype, activity, focus_item, k, v;
      self = this;
      this.S('#thumbnails').hide();
      this.S('#exitbutton').show();
      this.S('#focusitem').html('');
      itemtype = item.itemtype;
      activity = itemtypes[itemtype].activity;
      focus_item = $("<" + activity + ">");
      for (k in item) {
        v = item[k];
        focus_item.prop(k, v);
      }
      $(focus_item).on('task-finished', function(){
        return self.closeFocusedItem();
      });
      return focus_item.appendTo(this.S('#focusitem'));
    },
    addItemToFeed: function(item){
      var self, itemtype, thumbnail, new_item, k, v;
      self = this;
      itemtype = item.itemtype;
      thumbnail = itemtypes[itemtype].thumbnail;
      new_item = $("<" + thumbnail + ">");
      for (k in item) {
        v = item[k];
        new_item.prop(k, v);
      }
      new_item.click(function(){
        return self.openItem(item);
      });
      return new_item.appendTo(self.S('#thumbnails'));
    },
    itemsChanged: function(){
      var i$, ref$, len$, item, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.items).length; i$ < len$; ++i$) {
        item = ref$[i$];
        results$.push(this.addItemToFeed(item));
      }
      return results$;
    },
    ready: function(){
      var self;
      self = this;
      return $.getJSON('/getfeeditems', function(data){
        var word;
        return self.items = (function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = data).length; i$ < len$; ++i$) {
            word = ref$[i$];
            results$.push({
              itemtype: 'typeword',
              word: word
            });
          }
          return results$;
        }());
      });
    }
  });
}).call(this);
