// Generated by LiveScript 1.3.1
(function(){
  var root, deployd, asyncblock, server, ref$, noerr;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  deployd = require('deployd');
  asyncblock = require('asyncblock');
  server = deployd({
    port: process.env.PORT || 8080,
    env: 'development',
    db: {
      connectionString: (ref$ = process.env.MONGOHQ_URL) != null
        ? ref$
        : (ref$ = process.env.MONGOLAB_URI) != null
          ? ref$
          : (ref$ = process.env.MONGOSOUP_URL) != null ? ref$ : 'mongodb://localhost:27017/default'
    }
  });
  noerr = function(f){
    return function(res){
      return f(null, res);
    };
  };
  server.on('listening', function(){
    var dpd;
    dpd = require('deployd/lib/internal-client').build(server);
    return dpd.taskitems.get(function(taskitems){
      var wordlist;
      if (taskitems.length === 0) {
        wordlist = ['cat', 'dog', 'white', 'black', 'blue', 'red', 'bee', 'bird', 'lion', 'tiger', 'fish', 'city', 'house', 'roof', 'tree', 'river', 'apple', 'banana', 'cherry', 'orange', 'pear'];
        return asyncblock(function(flow){
          var i$, ref$, len$, word, results$ = [];
          dpd.taskitems.post({
            itemtype: 'example',
            data: {
              foo: 'somefooval',
              bar: 'somebarval'
            },
            social: {
              poster: 'geza'
            }
          }, noerr(flow.add()));
          flow.wait();
          for (i$ = 0, len$ = (ref$ = wordlist).length; i$ < len$; ++i$) {
            word = ref$[i$];
            dpd.taskitems.post({
              itemtype: 'typeword',
              data: {
                word: word
              },
              social: {
                poster: 'someuser'
              }
            }, noerr(flow.add()));
            results$.push(flow.wait());
          }
          return results$;
        });
      }
    });
  });
  server.listen();
}).call(this);
