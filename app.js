// Generated by LiveScript 1.3.1
(function(){
  var root, deployd, server, ref$;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  deployd = require('deployd');
  server = deployd({
    port: process.env.PORT || 8080,
    env: 'development',
    db: {
      connectionString: (ref$ = process.env.MONGOHQ_URL) != null
        ? ref$
        : (ref$ = process.env.MONGOLAB_URI) != null
          ? ref$
          : (ref$ = process.env.MONGOSOUP_URL) != null ? ref$ : 'mongodb://localhost:27017/default'
    }
  });
  server.listen();
  /*
  get_image_url = (query, callback) ->
    Bing.images query, {}, (error, res2, body) ->
      #callback body.d.results[0].MediaUrl
      callback [x.MediaUrl for x in body.d.results]
      #callback body.d.results
  
  get_image_url_throttled = throttle_call get_image_url
  
  get_image_url_cached = func_cache get_image_url
  
  get_image_url_cached_throttled = throttle_call get_image_url_cached
  
  app.get '/image', (req, res) ->
    if not req.query.name?
      res.send 'mising name parameter'
      return
    get_image_url_cached_throttled req.query.name, (imgurl) ->
      res.send imgurl
  
  # feed items
  
  app.get '/gettaskitems', (req, res) ->
    dpd.taskitems.get (taskitems) ->
      res.send taskitems
  
  app.get '/getfeeditems', (req, res) ->
    wordlist = ['cat', 'dog', 'white', 'black', 'blue', 'red', 'bee', 'bird', 'lion', 'tiger', 'fish', 'city', 'house', 'roof', 'tree', 'river', 'apple', 'banana', 'cherry', 'orange', 'pear']
    res.json([{itemtype: 'example', data: {foo: 'somefooval', bar: 'somebarval'}, social: {poster: 'geza'}}] ++ [{itemtype: 'typeword', data: {word: word}, social: {poster: 'someuser'}} for word in wordlist])
  
  app.use server.handleRequest
  
  server.listen app.get('port'), '0.0.0.0'
  */
}).call(this);
